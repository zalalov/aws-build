# Create SG for AWS instances
---

# create sg for monitor instance
- name: Create SG For Monitoring
  ec2_group:
    region: "{{ ec2_config.region }}"
    name: "{{ project_name }}-sg-monitor"
    description: security group for monitoring server
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 10050
        to_port: 10050
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 10051
        to_port: 10051
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: sg_monitor

# create sg for proxy instance
- name: Create SG For Proxy
  ec2_group:
    region: "{{ ec2_config.region }}"
    name: "{{ project_name }}-sg-proxy"
    description: security group for proxy server
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 10050
        to_port: 10050
        group_id: "{{ sg_monitor.group_id }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: sg_proxy

# create sg for admin app instance
- name: Create SG For Admin App
  ec2_group:
    region: "{{ ec2_config.region }}"
    name: "{{ project_name }}-sg-admin"
    description: security group for admin app
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        group_id: "{{ sg_proxy.group_id }}"
      - proto: tcp
        from_port: 443
        to_port: 443
        group_id: "{{ sg_proxy.group_id }}"
      - proto: tcp
        from_port: 10050
        to_port: 10050
        group_id: "{{ sg_monitor.group_id }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: sg_admin

# create sg for blog app instance
- name: Create SG For Blog App
  ec2_group:
    region: "{{ ec2_config.region }}"
    name: "{{ project_name }}-sg-blog"
    description: security group for blog app
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        group_id: "{{ sg_proxy.group_id }}"
      - proto: tcp
        from_port: 443
        to_port: 443
        group_id: "{{ sg_proxy.group_id }}"
      - proto: tcp
        from_port: 10050
        to_port: 10050
        group_id: "{{ sg_monitor.group_id }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: sg_blog

# create sg for redis instance
- name: Create SG For Redis
  ec2_group:
    region: "{{ ec2_config.region }}"
    name: "{{ project_name }}-sg-redis"
    description: security group for redis server
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 6379
        to_port: 6379
        group_id: "{{ sg_proxy.group_id }}"
      - proto: tcp
        from_port: 6379
        to_port: 6379
        group_id: "{{ sg_admin.group_id }}"
      - proto: tcp
        from_port: 6379
        to_port: 6379
        group_id: "{{ sg_blog.group_id }}"
      - proto: tcp
        from_port: 10050
        to_port: 10050
        group_id: "{{ sg_monitor.group_id }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: sg_redis
